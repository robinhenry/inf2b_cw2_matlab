function [Cpreds, Ms, Covs] = my_gaussian_classify(Xtrn, Ctrn, Xtst, epsilon)
% Bayes classification with multivariate Gaussian distributions.
% Input:
%   Xtrn : M-by-D training data matrix
%   Ctrn : M-by-1 label vector for Xtrn
%   Xtst : N-by-D test data matrix
%   epsilon : A scalar parameter for regularisation
% Output:
%  Cpreds : N-by-1 matrix of predicted labels for Xtst
%  Ms     : D-by-K matrix of mean vectors
%  Covs   : D-by-D-by-K 3D array of covariance matrices

% Size of matrices
M = size(Xtrn,1);
D = size(Xtrn,2);
N = size(Xtst,1);
K = 26;             % number of classes

% Compute matrix of sample mean vectors 
%   & 3D array of sample covariance matrices (including regularisation)
Ms = zeros(D,K);
Covs = zeros(D,D,K);
for k = 1:K
    samples = Xtrn(Ctrn == k, :);
    mu = myMean(samples);
    Ms(:,k) = mu;
    Covs(:,:,k) = myCov(samples, mu) + eye(D) * epsilon;
end

% Prior probability, where a uniform distribution is assumed
prior = 1/26;

% Compute likelihoods probabilities for the test samples, in the log domain
lkh_log = zeros(N, K);
for k = 1:K
    lkh_log(:,k) = - D * log(2*pi) - log()/2

end
